<?php
/**
 * @file gatekeeper.module
 * defines the main gatekeeper functionality
 */

/**
 * Load all criteria in hook_register_gate
 */
function gatekeeper_get_gates($reset = FALSE) {
	$gates = &drupal_static(__FUNCTION__);
  if (!isset($gates) || $reset) {
    $gates = module_invoke_all('register_gate');
    drupal_alter('register_gate', $gates);
  }

  // See module_implements() for an explanation of this cast.
  return (array) $gates;
}

/**
 * Define a hook to define functionality (powers)
 * this powers will show up when using gatekeeperui using the UI
 */
function gatekeeper_get_powers() {
	$powers = &drupal_static(__FUNCTION__);
  if (!isset($powers) || $reset) {
    $powers = module_invoke_all('register_power');
    drupal_alter('register_power', $powers);
  }

  // See module_implements() for an explanation of this cast.
  return (array) $powers;
}

/**
 * Function to call gatekeeper
 * $gate is the gate you which to open
 * $magickey is the magigkey that you want to use to open that door,
 * if the magickey you give equals the criteria used to validate the gate and the
 * magickey and the current conditions, then you shall pass
 */
function gatekeeperapi($gate = NULL, $magickey = NULL, $masterkey = FALSE) {
	// if we use the masterkey (equals to TRUE, defaults to FALSE)
	// don't even bother calling the function,
	// just return TRUE
	if($masterkey) {
		return TRUE;
	}
	else {
		$gates = gatekeeper_get_gates();
		
		foreach($gates as $key => $item) {
			// execute the callback stablished on the $gate
			// and pass the $magickey
			if($gate == $key) {
				$function = $item["callback"];
				if(function_exists($function)) {
					$result = call_user_func($item["callback"], $magickey);
					return $result;	
				}		
			}
		}
	}
}

/**
 * Get all powers with their gates, magic keys and master key status
 */
function gatekeeper_list() {
	$results = db_select("gatekeeper", "g")
		->fields("g")
		->execute()
		->fetchAll();
		
	return $results;
}

/**
 * Given a power and a gate, return the whole object from the db
 */
function gatekeeper_get($power, $gate) {
	$results = db_select("gatekeeper", "g")
		->fields("g")
		->condition("power", $power, "=")
		->condition("gate", $gate, "=")
		->execute()
		->fetchObject();
		
	return $results;
}

/**
 * Check who has a given power
 * The power will be queried to the database to get a gate and a magickey
 * That gate and magickey will be passed to gatekeeper
 * In case we want to open a functionality to everyone we can define the
 * use of the masterkey in which case all users will be granted access
 */
function gatekeeper($power) {
	$results = db_select("gatekeeper", "g")
		->condition("power", $power, "=")
		->fields("g")
		->execute()
		->fetchAll();
		
	// we should loop here since there could be many gates for one power
	// for instance, we could set: tweet power to gate lang en
	// and tweet power to gate lang es
	// once we set the tweet power to use the masterkey, all users will be
	// granted access so no gate or masterkey is necessary
	
	foreach($results as $result) {
		if(gatekeeperapi(isset($result->gate) ? $result->gate : NULL, isset($result->magickey) ? $result->magickey : NULL, $result->masterkey)) {
			return TRUE;
		}
		else {
			return FALSE;
		}
	}
}


